# .github/workflows/BuildandTest.yml
name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Get project name
      id: get_project
      run: |
        PROJECT_NAME=$(ls src)
        echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_OUTPUT

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Create TestResults directory
      run: mkdir -p ./tests/TestResults

    - name: Run tests
      run: |
        dotnet test ./tests/${{ steps.get_project.outputs.PROJECT_NAME }}.Tests/Test.csproj --configuration Release --no-build --logger "trx;LogFileName=testresults.trx" --results-directory ./tests/TestResults
        if [ $? -ne 0 ]; then
          dotnet test ./tests/${{ steps.get_project.outputs.PROJECT_NAME }}.Tests/Test.csproj --help
          exit 1
        fi

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: './tests/TestResults/*.trx'

    - name: Pack project for netstandard2.0
      run: dotnet pack ./src/${{ steps.get_project.outputs.PROJECT_NAME }}/${{ steps.get_project.outputs.PROJECT_NAME }}.csproj -c Release -p:TargetFramework=netstandard2.0 --output ./artifacts --include-symbols

    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: List files in artifacts directory
      run: ls -la ./artifacts

