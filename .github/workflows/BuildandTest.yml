# .github/workflows/BuildandTest.yml
name: Build and Test

on:
  push:
    branches:
      - main   
  pull_request:
    branches:
      - main

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: Check commit message2
      id: check-commit-message
      run: |
        COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
        echo "Commit message: $COMMIT_MESSAGE"
        if [[ $COMMIT_MESSAGE == *Merge* ]]; then
          echo "merge_commit=true" >> $GITHUB_OUTPUT
        else
          echo "merge_commit=false" >> $GITHUB_OUTPUT1
        fi


    - name: Setup .NET Core
      if: steps.check-commit-message.outputs.merge_commit == 'false'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore  

    - name: Build UpInfo78 project
      run: dotnet build ./src/UpInfo78/UpInfo78.csproj --configuration Release

    - name: Create Test Results Directory
      run: mkdir -p ./tests/TestResults

    - name: Run NUnit tests
      run: dotnet test ./tests/UpInfo78.Tests/Test.csproj --no-build --logger "trx;LogFileName=testresults.trx" --results-directory ./tests/TestResults

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: './test/TestResults/*.trx'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



    - name: Pack project
      run: dotnet pack ./src/UpInfo78/UpInfo78.csproj --output ./artifacts --include-symbols --no-build

    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        dotnet nuget push ./artifacts/*.symbols.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: List files in artifacts directory
      run: ls -la ./artifacts

    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: '${{ steps.update-version.outputs.new_version }}'
        file_pattern: './UpInfo78/UpInfo78.csproj' 
        tagging_message: '${{ steps.update-version.outputs.new_version }}'  # **修改**: 在提交时创建标签